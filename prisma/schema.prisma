// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  username          String             @db.VarChar(25)	
  salt              String
  password          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  role              UserRole           @default(USER)
  MatchParticipant  MatchParticipant[]
  TitlesOnUsers     TitlesOnUsers[]
  Elo Elo[]
}

model Match {
  id            String                @id @default(cuid())
  mode          MatchMode             @default(CASUAL)
  gameMode      GameMode              @relation(fields: [gameModeId], references: [id])
  gameModeId    Int
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  finishedAt    DateTime?
  matchSettings Json?              

  participants  MatchParticipant[]
}

model MatchParticipant {
  user          User                  @relation(fields: [userId], references: [id])
  userId        Int
  match         Match                 @relation(fields: [matchId], references: [id])
  matchId       String
  winner        Boolean
  eloChange     Int?
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt

  @@id([userId, matchId])
}

model Elo {
  user    User                  @relation(fields: [userId], references: [id])
  userId  Int
  gameMode      GameMode        @relation(fields: [gameModeId], references: [id])
  gameModeId    Int
  value         Int             @default(1500)

  @@id([userId, gameModeId])
}

model GameMode {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  Match       Match[]
  Elo         Elo[]
}

model Title {
  id              Int               @id @default(autoincrement())
  value           String
  rarity          Rarity            @default(COMMON)
  TitlesOnUsers   TitlesOnUsers[]
}

model TitlesOnUsers {
  user                User      @relation(fields: [userId], references: [id])
  userId              Int
  title               Title     @relation(fields: [titleId], references: [id])
  titleId             Int
  active              Boolean   @default(false)

  @@id([userId, titleId])
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  EPIC
  LEGENDARY
}

enum MatchMode {
  CASUAL
  RANKED
}

enum UserRole {
  USER
  MODERATOR
  ADMIN
}
